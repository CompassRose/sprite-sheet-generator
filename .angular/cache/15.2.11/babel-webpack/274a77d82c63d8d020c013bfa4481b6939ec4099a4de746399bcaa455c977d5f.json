{"ast":null,"code":"import * as csvParser from 'csv-parser';\nimport { Readable } from 'stream';\nimport * as i0 from \"@angular/core\";\nexport class AirlineCodesService {\n  constructor() {\n    this.AirlineCodes = '../assets/csv/airline-codes.csv';\n  }\n  parseCSVData(csvData) {\n    return new Promise((resolve, reject) => {\n      const results = [];\n      const stream = Readable.from(csvData);\n      stream.pipe(csvParser()).on('data', data => results.push(data)).on('end', () => resolve(results)).on('error', error => reject(error));\n    });\n  }\n  static #_ = this.ɵfac = function AirlineCodesService_Factory(t) {\n    return new (t || AirlineCodesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AirlineCodesService,\n    factory: AirlineCodesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,SAAS,MAAM,YAAY;AACvC,SAASC,QAAQ,QAAQ,QAAQ;;AAMjC,OAAM,MAAOC,mBAAmB;EAJhCC;IAOa,iBAAY,GAAG,iCAAiC;;EAGlDC,YAAY,CAACC,OAAe;IAC/B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC,MAAMC,OAAO,GAAQ,EAAE;MACvB,MAAMC,MAAM,GAAGT,QAAQ,CAACU,IAAI,CAACN,OAAO,CAAC;MACrCK,MAAM,CACDE,IAAI,CAACZ,SAAS,EAAE,CAAC,CACjBa,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAKL,OAAO,CAACM,IAAI,CAACD,IAAI,CAAC,CAAC,CACxCD,EAAE,CAAC,KAAK,EAAE,MAAMN,OAAO,CAACE,OAAO,CAAC,CAAC,CACjCI,EAAE,CAAC,OAAO,EAAGG,KAAK,IAAKR,MAAM,CAACQ,KAAK,CAAC,CAAC;IAC9C,CAAC,CAAC;EACN;EAAC;qBAhBQd,mBAAmB;EAAA;EAAA;WAAnBA,mBAAmB;IAAAe,SAAnBf,mBAAmB;IAAAgB,YAHhB;EAAM","names":["csvParser","Readable","AirlineCodesService","constructor","parseCSVData","csvData","Promise","resolve","reject","results","stream","from","pipe","on","data","push","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\tsternberg\\svg-sprite-generator\\src\\app\\airline-codes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as csvParser from 'csv-parser';\r\nimport { Readable } from 'stream';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AirlineCodesService {\r\n\r\n\r\n    readonly AirlineCodes = '../assets/csv/airline-codes.csv';\r\n\r\n\r\n    public parseCSVData(csvData: string): Promise<any[]> {\r\n        return new Promise((resolve, reject) => {\r\n            const results: any = [];\r\n            const stream = Readable.from(csvData);\r\n            stream\r\n                .pipe(csvParser())\r\n                .on('data', (data) => results.push(data))\r\n                .on('end', () => resolve(results))\r\n                .on('error', (error) => reject(error));\r\n        });\r\n    }\r\n\r\n    // csvAirportCodesJSON(airlinecsv: any) {\r\n\r\n    //     function parseCSVData(csvData: string): Promise<any[]> {\r\n    //         return new Promise((resolve, reject) => {\r\n    //             const results = [];\r\n    //             csvData\r\n    //                 .pipe(csvParser())\r\n    //                 .on('data', (data) => results.push(data))\r\n    //                 .on('end', () => resolve(results))\r\n    //                 .on('error', (error) => reject(error));\r\n    //         });\r\n    //     }\r\n\r\n    //     console.log('airlinecsv ', airlinecsv)\r\n    //     // const lines = airlinecsv.split(/[\\r\\n]+/);\r\n    //     // for (let i = 0; i < lines.length; i++) {\r\n    //     //     lines[i] = lines[i].replace(/\\s/, '');\r\n    //     // }\r\n    //     // const result = [];\r\n    //     // const headers = lines[0].split(',');\r\n    //     // for (let i = 1; i < lines.length; i++) {\r\n    //     //     const obj: any = {};\r\n    //     //     const currentline = lines[i].split(',');\r\n\r\n\r\n    //     //     for (let j = 0; j < headers.length; j++) {\r\n    //     //         //console.log('currentline ', currentline)\r\n    //     //         if (headers[j] !== 'coordinates') {\r\n    //     //             obj[headers[j].toString()] = currentline[j];\r\n    //     //         } else {\r\n    //     //             let temp3 = currentline[2].replace(/['\"]+/g, '')\r\n    //     //             let temp4 = currentline[3].replace(/['\"|/\\s/]+/g, '')\r\n    //     //             temp3 = Math.round((+temp3 * 100) / 100)\r\n    //     //             temp4 = Math.round((+temp4 * 100) / 100)\r\n    //     //             const tester = [];\r\n    //     //             tester.push(temp4, temp3)\r\n    //     //             obj[headers[j]] = tester;\r\n    //     //         }\r\n    //     //     }\r\n    //     //     result.push(obj);\r\n    //     // }\r\n    //     return results;\r\n    //     // return JSON.stringify(result); //JSON\r\n    // }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}