{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AirlineCodesService {\n  constructor() {\n    this.MonthlyAvailable_URL = '../assets/csv/airline-codes.csv';\n  }\n  csvAirportCodesJSON(airlinecsv) {\n    console.log('airlinecsv ', airlinecsv);\n    const lines = airlinecsv.split(/[\\r\\n]+/);\n    for (let i = 0; i < lines.length; i++) {\n      lines[i] = lines[i].replace(/\\s/, '');\n    }\n    const result = [];\n    const headers = lines[0].split(',');\n    for (let i = 1; i < lines.length; i++) {\n      const obj = {};\n      const currentline = lines[i].split(',');\n      for (let j = 0; j < headers.length; j++) {\n        //console.log('currentline ', currentline)\n        if (headers[j] !== 'coordinates') {\n          obj[headers[j].toString()] = currentline[j];\n        } else {\n          let temp3 = currentline[2].replace(/['\"]+/g, '');\n          let temp4 = currentline[3].replace(/['\"|/\\s/]+/g, '');\n          temp3 = Math.round(+temp3 * 100 / 100);\n          temp4 = Math.round(+temp4 * 100 / 100);\n          const tester = [];\n          tester.push(temp4, temp3);\n          obj[headers[j]] = tester;\n        }\n      }\n      result.push(obj);\n    }\n    return result;\n    // return JSON.stringify(result); //JSON\n  }\n  static #_ = this.ɵfac = function AirlineCodesService_Factory(t) {\n    return new (t || AirlineCodesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AirlineCodesService,\n    factory: AirlineCodesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,mBAAmB;EAJhCC;IAOa,yBAAoB,GAAG,iCAAiC;;EAEjEC,mBAAmB,CAACC,UAAe;IAC/BC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,UAAU,CAAC;IACtC,MAAMG,KAAK,GAAGH,UAAU,CAACI,KAAK,CAAC,SAAS,CAAC;IACzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACnCF,KAAK,CAACE,CAAC,CAAC,GAAGF,KAAK,CAACE,CAAC,CAAC,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;;IAEzC,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,OAAO,GAAGN,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,MAAMK,GAAG,GAAQ,EAAE;MACnB,MAAMC,WAAW,GAAGR,KAAK,CAACE,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC;MAGvC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACH,MAAM,EAAEM,CAAC,EAAE,EAAE;QACrC;QACA,IAAIH,OAAO,CAACG,CAAC,CAAC,KAAK,aAAa,EAAE;UAC9BF,GAAG,CAACD,OAAO,CAACG,CAAC,CAAC,CAACC,QAAQ,EAAE,CAAC,GAAGF,WAAW,CAACC,CAAC,CAAC;SAC9C,MAAM;UACH,IAAIE,KAAK,GAAGH,WAAW,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;UAChD,IAAIQ,KAAK,GAAGJ,WAAW,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;UACrDO,KAAK,GAAGE,IAAI,CAACC,KAAK,CAAE,CAACH,KAAK,GAAG,GAAG,GAAI,GAAG,CAAC;UACxCC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAE,CAACF,KAAK,GAAG,GAAG,GAAI,GAAG,CAAC;UACxC,MAAMG,MAAM,GAAG,EAAE;UACjBA,MAAM,CAACC,IAAI,CAACJ,KAAK,EAAED,KAAK,CAAC;UACzBJ,GAAG,CAACD,OAAO,CAACG,CAAC,CAAC,CAAC,GAAGM,MAAM;;;MAGhCV,MAAM,CAACW,IAAI,CAACT,GAAG,CAAC;;IAEpB,OAAOF,MAAM;IACb;EACJ;EAAC;qBApCQX,mBAAmB;EAAA;EAAA;WAAnBA,mBAAmB;IAAAuB,SAAnBvB,mBAAmB;IAAAwB,YAHhB;EAAM","names":["AirlineCodesService","constructor","csvAirportCodesJSON","airlinecsv","console","log","lines","split","i","length","replace","result","headers","obj","currentline","j","toString","temp3","temp4","Math","round","tester","push","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\tsternberg\\svg-sprite-generator\\src\\app\\airline-codes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AirlineCodesService {\r\n\r\n\r\n    readonly MonthlyAvailable_URL = '../assets/csv/airline-codes.csv';\r\n\r\n    csvAirportCodesJSON(airlinecsv: any) {\r\n        console.log('airlinecsv ', airlinecsv)\r\n        const lines = airlinecsv.split(/[\\r\\n]+/);\r\n        for (let i = 0; i < lines.length; i++) {\r\n            lines[i] = lines[i].replace(/\\s/, '');\r\n        }\r\n        const result = [];\r\n        const headers = lines[0].split(',');\r\n        for (let i = 1; i < lines.length; i++) {\r\n            const obj: any = {};\r\n            const currentline = lines[i].split(',');\r\n\r\n\r\n            for (let j = 0; j < headers.length; j++) {\r\n                //console.log('currentline ', currentline)\r\n                if (headers[j] !== 'coordinates') {\r\n                    obj[headers[j].toString()] = currentline[j];\r\n                } else {\r\n                    let temp3 = currentline[2].replace(/['\"]+/g, '')\r\n                    let temp4 = currentline[3].replace(/['\"|/\\s/]+/g, '')\r\n                    temp3 = Math.round((+temp3 * 100) / 100)\r\n                    temp4 = Math.round((+temp4 * 100) / 100)\r\n                    const tester = [];\r\n                    tester.push(temp4, temp3)\r\n                    obj[headers[j]] = tester;\r\n                }\r\n            }\r\n            result.push(obj);\r\n        }\r\n        return result;\r\n        // return JSON.stringify(result); //JSON\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}